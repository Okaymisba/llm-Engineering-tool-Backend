from models.chat_sessions import ChatSession


def add_chat_in_chat_session(session_id,
                             belongs_to,
                             document,
                             image,
                             question,
                             answer,
                             model,
                             input_tokens,
                             output_tokens,
                             request_latency_ms,
                             status_code,
                             document_hits,
                             db):
    """
    Adds a new chat session entry to the database, given the provided parameters.

    :param session_id: Unique identifier for the chat session.
    :type session_id: str
    :param belongs_to: User ID the chat session belongs to.
    :type belongs_to: int
    :param document: Document data associated with the chat session.
    :type document: list
    :param image: Image data associated with the chat session.
    :type image: list
    :param question: The question asked by the user.
    :type question: str
    :param answer: The response generated by the model.
    :type answer: str
    :param model: The model used for generating the response.
    :type model: str
    :param input_tokens: The number of input tokens used in generating the response.
    :type input_tokens: int
    :param output_tokens: The number of output tokens used in generating the response.
    :type output_tokens: int
    :param request_latency_ms: The latency of the request in milliseconds.
    :type request_latency_ms: int
    :param status_code: The status code of the request.
    :type status_code: int
    :param document_hits: The relevant document hits for the given query.
    :type document_hits: dict
    :param db: The database session to perform the write operation on.
    :type db: Session
    :return: The added chat session entry.
    :rtype: ChatSession
    """
    chat_session = ChatSession(
        session_id=session_id,
        belongs_to=belongs_to,
        document=str(document) if document else None,
        image=str(image) if image else None,
        question=question,
        answer=answer,
        model=model,
        input_tokens=input_tokens,
        output_tokens=output_tokens,
        total_tokens=input_tokens + output_tokens,
        request_latency_ms=request_latency_ms,
        status_code=status_code,
        document_hits=document_hits
    )

    db.add(chat_session)
    db.commit()
    db.refresh(chat_session)
